{"version":3,"sources":["components/Social.js","components/Nav.js","components/Header.js","components/TwoSigmaLogo.js","components/Footer.js","utils/file_parsing.js","utils/python_file.js","components/ProgressBar.js","components/FileSnapshot.js","components/Tabs.js","components/SearchBar.js","components/OpenDataSearcher.js","components/FileLoader.js","contexts/app_context.js","components/UploadModal.js","components/ProjectModal.js","utils/calc_embedings.js","contexts/actions.js","components/LoadProjectModal.js","components/GHPagesRedirect.js","components/ApplyMapping.js","components/ApplyMappingsModal.js","components/CodeExportModal.js","components/TablePreview.js","pages/DatasetPage.js","components/EntryCard.js","components/OrderBySelector.js","components/EntryPill.js","components/SelectedEntriesList.js","components/EntryTable.js","components/EditableText.js","components/MappingFocus.js","components/MappingsMenu.js","components/MappingsArea.js","utils/text_clustering.js","pages/ColumnPage.js","components/ProjectCard.js","pages/WelcomePage.js","components/ColumnCard.js","pages/ProjectPage.js","App.js","serviceWorker.js","index.js"],"names":["Social","className","href","target","rel","icon","faTwitter","faMedium","faGithub","Nav","useState","showMenu","setShowMenu","toggleMenu","faBars","onClick","faTimes","to","Header","history","match","style","display","alignItems","alt","src","process","TwoSigmaLogo","width","height","viewBox","xmlns","id","d","fill","fill-rule","transform","Footer","uuidv1","require","exportPythonCode","project","datasets","meta_columns","columns","mappings","settings","output_file","recipe_name","slugify","name","output_data_name","recipy","createJSONMapping","python_code","zip","JSZip","folder","file","JSON","stringify","generateAsync","type","then","content","saveAs","saveProject","entries","projectJSON","output_name","blob","Blob","description","make_col_mappings","col_renames","forEach","mc","map","cID","find","c","filter","dataset_id","rc","datasetsJSON","ref","rows","column_renames","mappingsJSON","applicableMappings","m","column_id","mapping","ProgressBar","total","value","toPrecision","FileSnapshot","onAddDataset","setColumns","dataset","setDataset","setEntries","includedCols","setIncludedCols","progress","setProgress","status","setStatus","displayEntries","useMemo","reduce","res","col","colEntries","e","slice","extra","length","useEffect","onProgress","report_progress_every","sample_rows","max_unique","Promise","resolve","reject","no_rows","set_dict","sample","exceded","columnCounts","fileSize","size","split","Papa","parse","worker","header","download","step","row","push","data","meta","fields","f","rows_read","bytes_read","cursor","total_size","val","includes","error","console","log","complete","Object","keys","field","unique","key","count","row_count","parseFileForPreview","result","Fragment","toLocaleString","column","checked","onChange","columnID","join","cols","focusCol","ents","Tabs","options","selected","onSelected","option","SearchBar","prompt","faSearch","placeholder","OpneDataSearcher","onDataset","searchTerm","setSearchTerm","searchResults","setSearchResults","domain","fetch","json","results","catch","err","marginBottom","text","resource","permalink","faExternalLinkAlt","onSelect","faDownload","FileLoader","filesPreview","setFilesPreview","setError","url","setURL","columnSelections","setColumnSelections","selectedTab","setSelectedTab","submitFromURL","submitFromOpenData","onDrop","useCallback","files","every","useDropzone","getRootProps","getInputProps","isDragActive","tab","disabled","faFile","accept","tabContent","defaultProps","StateContext","createContext","db","Dexie","version","stores","state","initalState","projects","embeddings","metaColumns","showUploadModal","showApplyMappingsModal","cache_loaded","storage_stats","persisting","add_or_replace","candidate","collection","id_col","item","reducer","action","payload","col_id","project_id","p","entry","meta_column","useStateValue","useContext","useProject","projectID","dispatch","metaColumnIds","colIDs","ids","columnIds","deleteProject","useMetaColumn","metaColumn","embeggins","entryNames","Array","from","Set","mergedEntry","ec","embed","useProjectStats","stats","project_datasets","project_columns","project_meta_columns","useStorage","quota","usage","useDataset","datasetID","columnIDs","UploadModal","params","onClose","goBack","overlayClassName","isOpen","onRequestClose","newDataset","ProjectModal","setName","setDescription","norm_vec","vec","mag","Math","sqrt","v","vec_mag","most_similar_to_category_mean","negativeEntries","search_entries","mean","entry_embeddings","emb","a","negative_embeddings","total_vec","concat","weight","i","category_mean","v1","v2","embeding","dist","index","suggestion","sort","b","combined_word_embedings_for_entry","word_embedings","norm","full_embed","word","word_embed","we","toLocaleLowerCase","rep","embedding","calc_embedings","unique_words","add","all","toLowerCase","replace","r","get_embedings_from_server","createMapping","selection","negative_examples","addEntriesToMapping","setProject","reader","FileReader","readAsText","onload","flexDirection","faDatabase","marginRight","faColumns","projectDetails","loadProject","GHPagesRedirect","redirect","setRedirect","sessionStorage","window","location","ApplyMapping","props","addColumns","setAddColumns","fileStream","streamSaver","createWriteStream","Response","body","pipeTo","ApplyMappingsModal","setFiles","CodeExportModal","changeNonMapped","setChangeNonMapped","createNewColumns","setCreateNewColumns","combineDatasets","setCombineDatasets","valueForNonMapped","setValueForNonMapped","TablePreview","k","setRows","rowGetter","rowsCount","onGridSort","sortColumn","sortDirection","initalRows","sortRows","DatasetPage","columnsForDataset","justifyContent","marginTop","EntryCard","onToggleSelect","OrderBySelector","show","setShowDropdown","setSelected","faSortDown","o","EntryPill","onRemove","SelectedEntriesList","onRemoveSelection","onClearAll","reverse","EntryTable","onToggleSelection","onClearSelection","order","setOrder","toggleSelection","orderKey","Alphabetically","Occurances","orderedEntries","faGlassCheers","EditableText","onUpdate","localText","setLocalText","editing","setEditing","onBlur","faEdit","MappingFocus","onRemoveEntryFromMapping","onRenameMapping","onClearMapping","onDeleteMapping","onAddSuggestionToMapping","onAddNegativeExampleToMapping","suggestions","suggestionType","setSuggestionType","suggestionsByType","removeEntryFromMapping","fontWeight","addSuggestionToMapping","faCheck","addNegativeExampleToMapping","MappingsMenu","onMappingSelected","class","mappingSelected","MappingsArea","onAddEntryToMapping","meaningSuggestions","textSuggestions","cacheSimilarities","suggestForMapping","mapping_entry","cacheKey","score","lev","ColumnPage","selectedMappingID","setSelectedMappingID","entrySelection","setEntrySelection","selectedMapping","requestEmbedingsForEntries","non_mapped_entries","some","useFuse","shouldSort","findAllMatches","caseSensitive","search","filteredEntries","clearSelection","onAddEntriesToMapping","entriesToAdd","shouldClearSelection","updateSearch","suggestionsAvaliable","meaning","total_rows","total_mapped_rows","total_entries_in_mappings","gridArea","justifySelf","onClear","overflowY","entryName","s","newName","renameMapping","deleteMapping","clearMapping","syle","ProjectCard","EmptyProjectCard","WelcomePage","faPlus","faUpload","ColumnCard","fromColumns","onUnmerge","link","totalUnique","tot","ProjectPage","selectedDatasetName","setSelectedDatasetName","selectedDataset","selectedColumns","setSelectedColumns","seperateMetaDataColumn","unMergeMetaColumn","dereferenceColumn","colID","faFistRaised","faInfoCircle","new_col","mergeMetaColumns","cid","changes","updateMetaColumn","changeMCName","App","basename","path","exact","component","LoadProjectModal","ShowApplyMappingsModal","Boolean","hostname","ReactDOM","render","children","useReducer","put","navigator","storage","estimate","estimation","get","cachedState","persist","persistResult","Provider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.672f142d.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n    faTwitter,\n    faMedium,\n    faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function Social() {\n\n    return (\n        <div className=\"social\">\n            <a href=\"https://twitter.com/tsdataclinic?lang=en\" target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <FontAwesomeIcon icon={faTwitter} />\n            </a>\n            <a href=\"https://medium.com/dataclinic\" target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <FontAwesomeIcon icon={faMedium} />\n            </a>\n            <a href=\"https://github.com/tsdataclinic\" target=\"blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <FontAwesomeIcon icon={faGithub} />\n            </a>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport Social from './Social'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n    faBars,\n    faTimes\n} from '@fortawesome/free-solid-svg-icons'\n\nexport default function Nav() {\n    const [showMenu, setShowMenu] = useState(false)\n    const toggleMenu = () => setShowMenu(!showMenu)\n    return (\n        <div className=\"top-menu\">\n            <FontAwesomeIcon className='hamburger-menu' icon={faBars}\n                onClick={toggleMenu}\n            />\n            <div className={`menu-links ${showMenu ? '' : 'hidden'}`}>\n                <FontAwesomeIcon className='menu-close-icon' icon={faTimes} onClick={toggleMenu} />\n                <Link onClick={toggleMenu} to=\"/\">Projects</Link>\n                <Link onClick={toggleMenu} to=\"/about\">About</Link>\n                <a onClick={toggleMenu} target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://airtable.com/shrMCZrvP7467LNG7\">\n                    Feedback\n                </a>\n\n                <Social />\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Nav from './Nav'\n\nexport default function Header({ history, match }) {\n  return (\n    <div className=\"header\">\n      <div className=\"logos\">\n        <Link style={{ display: 'flex', alignItems: 'center' }} to={'/'}>\n          <img alt={\"Data Clinic Modal\"} src={`${process.env.PUBLIC_URL}/DataClinicLogo.png`} />{' '}\n          <span className=\"data-clinic\">Data Clinic</span>{' '}\n        </Link>\n        <span className=\"project-name\">smooshr (beta)</span>\n      </div>\n      <div className=\"spacer\" />\n      <Nav />\n\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function TwoSigmaLogo() {\n  return (\n    <svg\n      width=\"116\"\n      height=\"21\"\n      viewBox=\"0 0 230 42\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      {' '}\n      <title>Two Sigma</title>\n      <defs>\n        <path id=\"a\" d=\"M19.436 21.668V1.025H0v20.643h19.435z\"></path>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path\n          fill=\"#FFFFFF\"\n          d=\"M59.06 13.464h-7.137v-3.155h17.811v3.155H62.6V30.95h-3.54zm14.01-3.155h3.745l4.747 15.66h.06l4.483-15.66h3.301l4.454 15.66h.059l4.777-15.66h3.716L95.895 30.95H92.09l-4.335-15.127h-.059L83.361 30.95h-3.804zm41.214-.355c5.986 0 10.527 4.158 10.527 10.556 0 6.55-4.541 10.794-10.527 10.794-5.985 0-10.558-4.245-10.558-10.794 0-6.398 4.573-10.556 10.558-10.556m0 18.285c3.892 0 6.93-2.89 6.93-7.729 0-4.658-3.007-7.518-6.93-7.518-3.922 0-6.93 2.86-6.93 7.518 0 4.839 3.038 7.73 6.93 7.73m40.846-17.931h3.539V30.95h-3.54V19.41zm18.744-.355c2.832 0 5.222.885 7.313 2.33 0 0-2.026 2.374-2.128 2.311-1.56-1-3.21-1.574-5.096-1.574-4.247 0-7.048 3.068-7.048 7.433 0 4.746 2.624 7.785 7.048 7.785 1.534 0 3.067-.385 4.13-1.003v-4.897h-5.19v-2.623h8.462v9.347c-2.007 1.416-4.63 2.24-7.49 2.24-6.46 0-10.587-4.363-10.587-10.85 0-6.075 4.187-10.499 10.586-10.499m12.506.355h3.57l6.812 9.701 6.811-9.701h3.541V30.95h-3.421V15.558l-6.962 9.73-6.958-9.73V30.95h-3.392z\"></path>\n        <g transform=\"translate(210.418 9.283)\">\n          <path\n            d=\"M7.639 1.025h4.158l7.64 20.643H15.63l-1.561-4.454H5.368l-1.533 4.454H0L7.639 1.025zM6.34 14.354h6.725L9.734 4.74h-.06L6.34 14.354z\"\n            fill=\"#FFFFFF\"></path>\n        </g>\n        <path\n          d=\"M136.826 26.498c1.861 1.007 3.618 1.68 5.887 1.68 2.715 0 4.069-1.18 4.069-2.83 0-4.66-11.616-1.594-11.616-9.466 0-3.303 2.74-5.928 7.37-5.928 2.714 0 5.443.653 7.579 1.902l-2.314 2.361c-1.68-.72-3.11-1.137-5.146-1.137-2.389 0-3.806 1.21-3.806 2.744 0 4.63 11.62 1.473 11.62 9.494 0 3.393-2.567 5.985-7.756 5.985-3.035 0-6.33-1.076-8.273-2.419l2.386-2.386z\"\n          fill=\"#FFFFFF\"></path>\n        <path\n          fill=\"#009AA6\"\n          d=\"M20.625 0L0 20.63l20.625 20.628 20.63-20.628z\"></path>\n        <path\n          d=\"M9.748 26.478c-.16-6.605 7.789-5.746 7.789-9.13 0-1.1-.863-2.041-2.784-2.041-1.401 0-2.743.701-3.724 1.602l-1.46-1.463c1.259-1.18 3.223-2.14 5.284-2.14 3.304 0 4.986 1.842 4.986 4.003 0 4.986-7.728 4.104-7.728 8.27h7.607v1.98h-9.95l-.02-1.081zm15.937-.5c-1.521 0-2.423-.98-2.423-2.862 0-2.404 1.602-4.566 3.525-4.566 1.5 0 2.402.981 2.402 2.883 0 2.401-1.582 4.545-3.504 4.545zm9.713-9.25h-8.444v.003c-3.437.005-6.033 2.745-6.033 6.403 0 2.905 1.881 4.666 4.544 4.666 3.464 0 6.067-2.743 6.067-6.386 0-1.182-.313-2.173-.856-2.935h2.947l1.775-1.75z\"\n          fill=\"#FFF\"></path>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\nimport TwoSigmaLogo from './TwoSigmaLogo';\nimport Social from './Social'\n\nexport default function Footer() {\n  return (\n    <footer>\n      <TwoSigmaLogo />\n      <p className=\"copyright\">\n        © 2019 Two Sigma Investments, LP. All rights reserved.\n      </p>\n      <Social />\n    </footer>\n  );\n}\n","import Papa from 'papaparse';\nimport { saveAs } from 'file-saver';\nimport slugify from 'slugify';\nimport python_template from './python_file';\nimport JSZip from 'jszip';\n\nconst uuidv1 = require('uuid/v1');\n\n// Takes a file handle and returns the summary stats for that file\nexport function parseFileForPreview(\n  file,\n  onProgress = null,\n  report_progress_every = 200,\n  sample_rows = 10,\n  max_unique = 500,\n) {\n  return new Promise((resolve, reject) => {\n    let no_rows = 0;\n    let set_dict = {};\n    let sample = [];\n    let exceded = [];\n    let columnCounts = {};\n\n    let ref = file.ref;\n    let fileSize = ref.size;\n\n    if (file.type !== 'file') {\n      ref = ref.split('?')[0];\n      ref = `${process.env.REACT_APP_API_URL}/proxy?url=${ref}`;\n    }\n\n    Papa.parse(ref, {\n      worker: true,\n      header: true,\n      download: file.type !== 'file',\n      step: function (row) {\n        if (no_rows < sample_rows) {\n          sample.push(row.data);\n        }\n\n        if (no_rows === 0) {\n          row.meta.fields.forEach(f => {\n            set_dict[f] = {};\n            columnCounts[f] = 0;\n          });\n        }\n\n        no_rows = no_rows + 1;\n\n        if (no_rows % report_progress_every === 0 && onProgress) {\n          onProgress({\n            rows_read: no_rows,\n            bytes_read: row.meta.cursor,\n            total_size: fileSize,\n          });\n        }\n\n        row.meta.fields.forEach(f => {\n          let val = row.data[f];\n\n          if (val === f) {\n            return;\n          }\n          if (val in set_dict[f]) {\n            set_dict[f][val] += 1;\n          } else {\n            if (columnCounts[f] < max_unique) {\n              set_dict[f][val] = 1;\n              columnCounts[f] += 1;\n            } else if (!exceded.includes(f)) {\n              exceded.push(f);\n            }\n          }\n        });\n      },\n      error: error => {\n        console.log('something bad happened ', error);\n      },\n      complete: () => {\n        let columns = [];\n        let entries = [];\n        const dataset_id = uuidv1();\n        Object.keys(set_dict).forEach(field => {\n          let column_id = uuidv1();\n\n          columns.push({\n            unique: Object.keys(set_dict[field]).length,\n            id: column_id,\n            name: field,\n            key: field,\n            dataset_id: dataset_id,\n            type: 'text',\n            exceded: exceded.includes(field),\n          });\n\n          Object.entries(set_dict[field]).forEach(([field, count]) =>\n            entries.push({ column_id, name: field, count }),\n          );\n        });\n\n        resolve({\n          dataset: {\n            id: dataset_id,\n            name: file.type === 'url' ? file.ref.split('?')[0] : file.ref.name,\n            file: file,\n            row_count: no_rows,\n            sample: sample,\n          },\n          columns: columns,\n          entries: entries,\n        });\n      },\n    });\n  });\n}\n\nexport const exportPythonCode = (\n  project,\n  datasets,\n  meta_columns,\n  columns,\n  mappings,\n  settings,\n) => {\n  const recipe_name = slugify(project.name) + '.json';\n  const output_data_name = slugify(project.name) + 'csv';\n\n  const recipy = createJSONMapping(\n    project,\n    datasets,\n    meta_columns,\n    columns,\n    mappings,\n    settings,\n  );\n  const python_code = python_template(recipe_name, output_data_name);\n\n  let zip = new JSZip();\n  let folder = zip.folder(project.name);\n  zip.folder(`${project.name}/put_your_datasets_in_here`);\n  zip.folder(`${project.name}/results`);\n  folder.file(recipe_name, JSON.stringify(recipy));\n  folder.file('process.py', python_code);\n  zip.generateAsync({ type: 'blob' }).then(content => {\n    saveAs(content, slugify(project.name) + 'zip');\n  });\n};\n\nexport const saveProject = (\n  project,\n  datasets,\n  meta_columns,\n  columns,\n  mappings,\n  entries,\n  settings,\n) => {\n  let projectJSON = {\n    project,\n    datasets,\n    meta_columns,\n    columns,\n    mappings,\n    entries,\n  };\n\n  const output_name = `${project.name}.json`;\n  var blob = new Blob([JSON.stringify(projectJSON)], {\n    type: 'text/plain;charset=utf-8',\n  });\n\n  saveAs(blob, output_name);\n};\nexport const createJSONMapping = (\n  project,\n  datasets,\n  meta_columns,\n  columns,\n  mappings,\n  settings,\n) => {\n  let projectJSON = {\n    name: project.name,\n    description: project.description,\n    id: project.id,\n  };\n\n  const make_col_mappings = d => {\n    const col_renames = {};\n    meta_columns.forEach(mc => {\n      const resolved_columns = mc.columns\n        .map(cID => columns.find(c => c.id === cID))\n        .filter(c => c.dataset_id === d.id);\n      resolved_columns.forEach(rc => {\n        col_renames[rc.name] = mc.name;\n      });\n    });\n    return col_renames;\n  };\n\n  let datasetsJSON = datasets.map(d => ({\n    type: d.file.type,\n    ref: d.file.ref,\n    rows: d.rows,\n    column_renames: make_col_mappings(d),\n  }));\n\n  const mappingsJSON = {};\n  meta_columns.forEach(mc => {\n    const applicableMappings = mappings.filter(m => m.column_id === mc.id);\n    mappingsJSON[mc.name] = {};\n    applicableMappings.forEach(mapping => {\n      mappingsJSON[mc.name][mapping.name] = mapping.entries;\n    });\n  });\n\n  const jsonOutput = {\n    project: projectJSON,\n    datasets: datasetsJSON,\n    mappings: mappingsJSON,\n    settings: settings ? settings : {},\n  };\n  return jsonOutput;\n};\n\nexport const saveMappingsJSON = (\n  project,\n  datasets,\n  meta_columns,\n  columns,\n  mappings,\n) => {\n  const output_name = slugify(project.name) + '.json';\n  var jsonOutput = createJSONMapping(\n    project,\n    datasets,\n    meta_columns,\n    columns,\n    mappings,\n  );\n\n  var blob = new Blob([JSON.stringify(jsonOutput)], {\n    type: 'text/plain;charset=utf-8',\n  });\n\n  saveAs(blob, output_name);\n};\n\nexport const saveMappingsCSV = (columns, mappings, output_name) => {\n  const csvMapping = columns.reduce((result, column) => {\n    const column_mappings = mappings.filter(m => m.column_id === column.id);\n    if (column_mappings.length > 0) {\n      column_mappings.forEach(mapping => {\n        mapping.entries.forEach(entry => {\n          result = result + [column.name, mapping.name, entry].join(',') + '\\n';\n        });\n      });\n    }\n    return result;\n  }, 'column,entry,mapped_entry\\n');\n  var blob = new Blob([csvMapping], { type: 'text/plain;charset=utf-8' });\n  saveAs(blob, `mappings_for_${output_name}.csv`);\n};\n\nexport const exportData = (project, outfile) => {\n  //   project.datasets.first.file\n};\n\nexport const applyAndSave = () => { };\nexport const applyMappingToFile = (columns, mappings, file) => { };\n","\nexport default function python_template(project_file,output_file){\n    var template = `\nimport pandas as pd \nimport json\nimport sys\n\nwith open('${project_file}', 'r') as f:\n    project = json.load(f)\n    datasets = project['datasets']\n\n    all_data = pd.DataFrame()\n\nfor dataset in datasets:\n    dataset_type = dataset['type']\n    dataset_name = dataset['ref']['path']\n    if(dataset_type=='file'):\n        file_path = 'put_your_datasets_in_here/{}'.format(dataset_name)\n        try:\n           print('Raeding {}'.format(dataset_name))\n           data = pd.read_csv(file_path)\n        except:\n           print(\"Place the file {} in the folder put_your_datasets_in_here\".format(file_path))\n           sys.exit()\n    elif(dataset_type['type'] == 'url'):\n        data = pd.read_csv(data['ref']['url'])\n    elif(dataset_Type['type'] == 'open_data'):\n        data = pd.read_csv(data['ref']['url'])\n        \n    print(\"Renaming columns\")\n    column_renames  = dataset['column_renames']\n    data = data.rename(columns=column_renames)\n\n    all_data = all_data.append(data, ignore_index=True)\n\nprint('Applying column mappings')\nfor column,mapping in project['mappings'].items():\n    map_dict = {}\n    for key, values in mapping.items():\n        for value in values:\n            map_dict[value] = key \n            \n    all_data[column] = all_data[column].map(lambda x: map_dict[x] if x in mapping else 'unknown')\n\nprint('Writing out results')\nall_data.to_csv('results/${output_file}')\nprint('Datasets have been smooshed')\n    `\n    return template\n}\n","import React from 'react'\n\nexport default function ProgressBar({ total, value, style }) {\n    return (\n        <div className='progress-bar' style={style}>\n            <div className='progress-bar-outer'>\n                <div className={'progress-bar-inner'} style={{ width: `${value * 100.0 / total}%` }}>\n                </div>\n            </div>\n            <p className='progress-bar-pc'>{value ? (value * 100 / total).toPrecision(3) : 0} %</p>\n        </div>\n    )\n}","import React, {useState, useEffect, useMemo} from 'react';\nimport {parseFileForPreview} from '../utils/file_parsing';\nimport ProgressBar from './ProgressBar';\n\nexport default function FileSnapshot({file, onAddDataset}) {\n  const [columns, setColumns] = useState([]);\n  const [dataset, setDataset] = useState([]);\n  const [entries, setEntries] = useState([]);\n  const [includedCols, setIncludedCols] = useState([]);\n  const [progress, setProgress] = useState({});\n  const [status, setStatus] = useState('loading');\n\n  const submit = () => {\n    const cols = columns.map(c => ({\n      ...c,\n      focusCol: includedCols.includes(c.id),\n    }));\n    const ents = entries.filter(e => includedCols.includes(e.column_id));\n\n    onAddDataset(dataset, cols, ents);\n\n    setStatus('saved');\n  };\n\n  const skip = () => {\n    setStatus('skipping');\n  };\n\n  const toggleSelect = columnID => {\n    if (includedCols.includes(columnID)) {\n      setIncludedCols(includedCols.filter(id => id !== columnID));\n    } else {\n      setIncludedCols([...includedCols, columnID]);\n    }\n  };\n\n  const displayEntries = useMemo(\n    () =>\n      columns.reduce((res, col) => {\n        const colEntries = entries.filter(e => e.column_id === col.id);\n        res[col.id] = {\n          entries: colEntries.slice(0, 5).map(e => e.name),\n          extra: colEntries.length - 5,\n        };\n\n        return res;\n      }, {}),\n    [entries, columns],\n  );\n\n  useEffect(() => {\n    parseFileForPreview(file, progress => setProgress(progress)).then(\n      result => {\n        setStatus('selecting');\n        setDataset(result.dataset);\n        setColumns(result.columns);\n        setEntries(result.entries);\n      },\n    );\n  }, [file]);\n\n  return (\n    <div className=\"file-snapshot\">\n      <div className=\"file-snapshot-header\">\n        <h3>{file.type === 'url' ? file.ref : file.ref.name}</h3>\n        {status === 'loading' && (\n          <React.Fragment>\n            <p>\n              Loading, parsed{' '}\n              {progress.rows_read ? progress.rows_read.toLocaleString() : 0}{' '}\n              rows\n            </p>\n            <ProgressBar\n              total={progress.total_size ? progress.total_size : 0}\n              value={progress.bytes_read}\n              style={{width: '500px'}}\n            />\n          </React.Fragment>\n        )}\n        {status === 'selecting' && (\n          <p>\n            Has a total of {dataset.row_count} rows and {columns.length}{' '}\n            columns. Select the columns you want to work with\n          </p>\n        )}\n      </div>\n      {status === 'selecting' && (\n        <React.Fragment>\n          <ul className=\"column-summary-list \">\n            {columns.map(column => (\n              <li className=\"column-preview-card card\" key={column.id}>\n                <div>\n                  <div className=\"summary-list-header\">\n                    <h3>\n                      {column.name}{' '}\n                      <span>{`${column.exceded ? '>' : ''} ${\n                        column.unique\n                      }`}</span>\n                    </h3>\n                    <input\n                      type=\"checkbox\"\n                      checked={includedCols.includes(column.id)}\n                      onChange={() => toggleSelect(column.id)}\n                    />\n                  </div>\n                  <p>\n                    {displayEntries[column.id].entries.join(', ') +\n                      ` and ${displayEntries[column.id].extra} more`}\n                  </p>\n                </div>\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"column-summary-buttons\">\n            <button onClick={submit}>Load</button>\n            <button onClick={skip}>Cancel</button>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Tabs({ options, selected, onSelected }) {\n  return (\n    <div className=\"tabs\">\n      {options.map(option => (\n        <p\n          className={`tab ${selected === option ? 'selected' : ''} `}\n          key={option}\n          onClick={() => onSelected(option)}>\n          {option}\n        </p>\n      ))}\n    </div>\n  );\n}","import React from 'react'\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function SearchBar({ value, onChange, prompt, style }) {\n\n  return (\n    <div className='search-bar-container' style={style}>\n      <FontAwesomeIcon className='search-icon' icon={faSearch} />\n      <input type='text'\n        className='search-bar'\n        onChange={(e) => onChange(e.target.value)}\n        placeholder={prompt}\n        value={value}\n      />\n      <FontAwesomeIcon className='clear-icon' onClick={() => onChange('')} icon={faTimes} />\n    </div>\n  )\n}\n\n\nSearchBar.defaultProps = {\n  style: {}\n}\n","import React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport { faExternalLinkAlt, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function OpneDataSearcher({ onDataset }) {\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const domain = 'data.cityofnewyork.us';\n  const onSelect = dataset => {\n    onDataset({\n      type: 'opendata',\n      ref: `https://data.cityofnewyork.us/api/views/${dataset.resource.id}/rows.csv?accessType=DOWNLOAD`,\n    });\n  };\n\n  useEffect(() => {\n    const base = 'https://api.us.socrata.com/api/catalog/v1?';\n    fetch(\n      `${base}domains=${domain}&search_context=${domain}&limit=20&only=datasets&q=${searchTerm}`,\n    )\n      .then(res => res.json())\n      .then(res => {\n        setSearchResults(res.results);\n      })\n      .catch(err => console.log(err));\n  }, [searchTerm]);\n\n  return (\n    <div className=\"open-data-search\">\n      <SearchBar\n        style={{ marginBottom: '30px' }}\n        text={searchTerm}\n        onChange={setSearchTerm}\n      />\n      {searchResults.map(dataset => (\n        <p>\n          {dataset.resource.name}{' '}\n          <span className=\"open-data-result-controls\">\n            {' '}\n            <a href={dataset.permalink} target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faExternalLinkAlt} />\n            </a>{' '}\n            <FontAwesomeIcon\n              onClick={() => onSelect(dataset)}\n              icon={faDownload}\n            />\n          </span>{' '}\n        </p>\n      ))}\n    </div>\n  );\n}\n","import React, {useCallback, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport FileSnapshot from './FileSnapshot';\nimport Tabs from './Tabs';\nimport OpenDataSearcher from './OpenDataSearcher';\n\nimport {faFile, faDownload} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nexport default function FileLoader({onAddDataset}) {\n  const [filesPreview, setFilesPreview] = useState(null);\n  const [error, setError] = useState(null);\n  const [url, setURL] = useState(null);\n\n  const [columnSelections, setColumnSelections] = useState([]);\n  const [selectedTab, setSelectedTab] = useState('file');\n\n  const submitFromURL = () => {\n    setFilesPreview([{type: 'url', ref: url}]);\n  };\n\n  const submitFromOpenData = dataset => {\n    setFilesPreview([dataset]);\n  };\n\n  const onDrop = useCallback(\n    files => {\n      if (files.every(file => file.name.split('.').includes('csv'))) {\n        setFilesPreview(files.map(f => ({type: 'file', ref: f})));\n        setColumnSelections({...columnSelections, [files[0].name]: {}});\n        setError(null);\n      } else {\n        setError('Some files are not CSVs, We only support CSVs for now');\n      }\n    },\n    [columnSelections],\n  );\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n\n  const renderURL = () => {\n    return (\n      <div className=\"url-tab\">\n        <FontAwesomeIcon icon={faDownload} />\n        <div>\n          <input\n            placeholder=\"dataseturl\"\n            value={url}\n            onChange={e => setURL(e.target.value)}\n          />\n          <button disabled={!url} onClick={submitFromURL}>\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const renderOpenDataPortal = () => {\n    return <OpenDataSearcher onDataset={submitFromOpenData} />;\n  };\n\n  const renderFile = () => {\n    return (\n      <div {...getRootProps()}>\n        <div className=\"file-tab\" style={{cursor: 'p'}}>\n          <FontAwesomeIcon icon={faFile} />\n          <input\n            {...getInputProps({\n              accept: ['text/csv', 'application/vnd.ms-excel'],\n            })}\n          />\n          {isDragActive ? (\n            <p>Drop the files here ... </p>\n          ) : (\n            <p>Drag 'n' drop files here or click to load dataset</p>\n          )}\n        </div>\n        {error && <p>{error}</p>}\n      </div>\n    );\n  };\n\n  const tabContent = () => {\n    switch (selectedTab) {\n      case 'url':\n        return renderURL();\n      case 'open data portal':\n        return renderOpenDataPortal();\n      default:\n        return renderFile();\n    }\n  };\n\n  return (\n    <div className=\"file-uploader\">\n      {filesPreview ? (\n        filesPreview.map(file => (\n          <FileSnapshot file={file} onAddDataset={onAddDataset} />\n        ))\n      ) : (\n        <React.Fragment>\n          <Tabs\n            options={['file', 'url', 'open data portal']}\n            selected={selectedTab}\n            onSelected={tab => setSelectedTab(tab)}\n          />\n          <div className=\"content\">{tabContent()}</div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n","import React, {createContext, useContext, useReducer, useEffect} from 'react';\nimport Dexie from 'dexie';\n\nconst uuidv1 = require('uuid/v1');\n\nexport const StateContext = createContext();\n\nconst db = new Dexie('state');\n\ndb.version(1).stores({\n  state: 'id',\n});\n\nconst initalState = {\n  datasets: [],\n  columns: [],\n  entries: [],\n  projects: [],\n  mappings: [],\n  embeddings: [],\n  metaColumns: [],\n  showUploadModal: false,\n  showApplyMappingsModal: false,\n  cache_loaded: false,\n  storage_stats: null,\n  persisting: false,\n};\n\n// Helper function\nconst add_or_replace = (candidate, collection, id_col = 'id') => {\n  if (collection.find(item => item[id_col] === candidate[id_col])) {\n    return collection.map(item =>\n      item[id_col] === candidate[id_col] ? candidate : item,\n    );\n  } else {\n    return [...collection, candidate];\n  }\n};\n\n// Main Reducer for the project\nconst reducer = (state, action) => {\n  const {type, payload} = action;\n  switch (type) {\n    case 'LOAD_CACHED_STATE':\n      return payload;\n\n    case 'ADD_DATASETS':\n      return {...state, datasets: [...state.datasets, ...payload]};\n\n    case 'ADD_OR_REPLACE_DATASET':\n      return {\n        ...state,\n        datasets: add_or_replace(payload, state.datasets),\n      };\n    case 'ADD_OR_REPLACE_ENTRY':\n      return {\n        ...state,\n        entries: add_or_replace(payload, state.entries, 'name'),\n      };\n    case 'ADD_OR_REPLACE_MAPPING':\n      return {\n        ...state,\n        mappings: add_or_replace(payload, state.mappings),\n      };\n    case 'ADD_OR_REPLACE_METACOLUMN':\n      return {\n        ...state,\n        metaColumns: add_or_replace(payload, state.metaColumns),\n      };\n    case 'ADD_OR_REPLACE_PROJECT':\n      return {\n        ...state,\n        projects: add_or_replace(payload, state.projects),\n      };\n    case 'ADD_OR_REPLACE_COLUMN':\n      return {\n        ...state,\n        columns: add_or_replace(payload, state.columns),\n      };\n    case 'REMOVE DATASET':\n      return {\n        ...state,\n        datasets: state.datasets.filter(d => d.id !== payload),\n      };\n\n    case 'ADD_EMBEDINGS':\n      return {\n        ...state,\n        embeddings: payload,\n      };\n    case 'ADD_COLUMNS':\n      return {...state, columns: [...state.columns, ...payload]};\n\n    case 'REMOVE_COLUMN':\n      return {\n        ...state,\n        columns: state.datasets.filter(c => c.id !== payload),\n      };\n\n    case 'ADD_ENTRIES':\n      return {...state, entries: [...state.entries, ...payload]};\n\n    case 'REMOVE ENTRY':\n      return {\n        ...state,\n        entries: state.entries.filter(e => e.id !== payload),\n      };\n\n    case 'CREATE_META_COLUMN_FROM_COL_ID':\n      return {\n        ...state,\n        metaColumns: [\n          ...state.metaColumns,\n          {\n            id: payload.id,\n            name: state.columns.find(c => c.id === payload.col_id).name,\n            description: state.columns.find(c => c.id === payload.col_id)\n              .description,\n            project_id: payload.project_id,\n            columns: [payload.col_id],\n          },\n        ],\n      };\n\n    case 'REMOVE_MAPPINGS_FOR_METACOLUMN':\n      return {\n        ...state,\n        mappings: state.mappings.filter(m => m.column_id !== payload),\n      };\n\n    case 'REMOVE_META_COLUMNS':\n      return {\n        ...state,\n        metaColumns: state.metaColumns.filter(mc => !payload.includes(mc.id)),\n      };\n    case 'ADD_META_COLUMNS':\n      return {\n        ...state,\n        metaColumns: [...state.metaColumns, ...payload],\n      };\n\n    case 'REMOVE_MAPPING':\n      return {\n        ...state,\n        mappings: state.mappings.filter(m => m.id !== payload),\n      };\n\n    case 'ADD_MAPPINGS':\n      return {\n        ...state,\n        mappings: [...state.mappings, ...payload],\n      };\n\n    case 'ADD_MAPPING':\n      return {\n        ...state,\n        mappings: [...state.mappings, payload],\n      };\n\n    case 'ADD_PROJECT':\n      return {\n        ...state,\n        projects: [...state.projects, {id: uuidv1(), ...payload}],\n      };\n\n    case 'REMOVE_PROJECT':\n      return {\n        ...state,\n        projects: state.projects.filter(p => p.id !== payload),\n      };\n\n    case 'UPDATE_PROJECT':\n      return {\n        ...state,\n        projects: state.projects.map(p =>\n          p.id === payload.id ? {...p, ...payload} : p,\n        ),\n      };\n\n    case 'ADD ENTRY TO MAPPING':\n      return {\n        ...state,\n        mappings: state.mappings.map(m =>\n          m.id === payload.id\n            ? {...m, entries: [...m.entries, payload.entry]}\n            : m,\n        ),\n      };\n    case 'UPDATE_MAPPING':\n      return {\n        ...state,\n        mappings: state.mappings.map(m =>\n          m.id === payload.id ? {...m, ...payload.mapping} : m,\n        ),\n      };\n    case 'REMOVE_ENTRIES_FOR_COLUMN':\n      return {\n        ...state,\n        entries: state.entries.filter(entry => entry.columnID === payload),\n      };\n\n    case 'REMOVE_META_COLUMN':\n      return {\n        ...state,\n        meta_columns: state.metaColumns.filter(mc => mc.id !== payload),\n      };\n\n    case 'UPDATE_META_COLUMN':\n      return {\n        ...state,\n        meta_columns: state.metaColumns.map(mc =>\n          mc.id === payload.id ? {...mc, ...payload.meta_column} : mc,\n        ),\n      };\n\n    case 'SET_PERSISTING':\n      return {\n        ...state,\n        persisting: payload,\n      };\n    case 'UPDATE_STORAGE_QUOTA':\n      return {\n        ...state,\n        storage_stats: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initalState);\n  const {\n    datasets,\n    columns,\n    entries,\n    projects,\n    mappings,\n    metaColumns,\n    showUploadModal,\n    showApplyMappingsModal,\n    cache_loaded,\n  } = state;\n\n  // Effect used to persist the state values that we care about preserving\n  // to our cache\n  // TODO move this function to it's own hook section\n  useEffect(() => {\n    if (cache_loaded) {\n      db.state.put({\n        data: JSON.stringify({\n          datasets,\n          columns,\n          entries,\n          projects,\n          mappings,\n          metaColumns,\n          showUploadModal,\n          showApplyMappingsModal,\n        }),\n        id: 1,\n      });\n\n      if (navigator.storage && navigator.storage.estimate) {\n        navigator.storage.estimate().then(estimation => {\n          const {quota, usage} = estimation;\n          dispatch({\n            type: 'UPDATE_STORAGE_QUOTA',\n            payload: {quota, usage},\n          });\n        });\n      } else {\n        console.error('StorageManager not found');\n      }\n    }\n  }, [\n    datasets,\n    columns,\n    entries,\n    projects,\n    mappings,\n    metaColumns,\n    showUploadModal,\n    showApplyMappingsModal,\n    cache_loaded,\n  ]);\n\n  // Use this to restore the state\n  useEffect(() => {\n    db.state.get(1).then(result => {\n      if (result) {\n        const cachedState = JSON.parse(result.data);\n        dispatch({\n          type: 'LOAD_CACHED_STATE',\n          payload: {...initalState, ...cachedState, cache_loaded: true},\n        });\n      } else {\n        dispatch({\n          type: 'LOAD_CACHED_STATE',\n          payload: {...initalState, cache_loaded: true},\n        });\n      }\n    });\n  }, []);\n\n  // Record if we are able to reliably persist the\n  // cached local state\n  useEffect(() => {\n    if (navigator.storage && navigator.storage.persist) {\n      navigator.storage.persist().then(persistResult => {\n        dispatch({\n          type: 'SET_PERSISTING',\n          payload: persistResult,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <StateContext.Provider value={[state, dispatch]}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n\nexport const useStateValue = () => useContext(StateContext);\n\nexport const useProject = projectID => {\n  const [state, dispatch] = useStateValue();\n  const project = state.projects.find(p => p.id === projectID);\n  const datasets = state.datasets.filter(d => d.project_id === projectID);\n  const metaColumns = state.metaColumns.filter(\n    mc => mc.project_id === projectID,\n  );\n  const metaColumnIds = metaColumns.map(mc => mc.id);\n\n  const colIDs = metaColumns.reduce((ids, mc) => [...ids, ...mc.columns], []);\n  const mappings = state.mappings.filter(m =>\n    metaColumnIds.includes(m.column_id),\n  );\n  const columns = state.columns.filter(c => colIDs.includes(c.id));\n  const columnIds = columns.map(c => c.id);\n  const entries = state.entries.filter(e => columnIds.includes(e.column_id));\n\n  const deleteProject = () => {\n    columns.forEach(c => {\n      dispatch({\n        type: 'DELETE_ENTRIES_FOR_COLUMN',\n        payload: c.id,\n      });\n      dispatch({\n        type: 'REMOVE_COLUMN',\n        payload: c.id,\n      });\n    });\n\n    mappings.forEach(m => {\n      dispatch({\n        type: 'REMOVE_MAPPING',\n        payload: m.id,\n      });\n    });\n\n    metaColumns.forEach(m => {\n      dispatch({\n        type: 'REMOVE_META_COLUMN',\n        payload: m.id,\n      });\n    });\n\n    datasets.forEach(d => {\n      dispatch({\n        type: 'REMOVE_DATASET',\n        payload: d.id,\n      });\n    });\n\n    dispatch({\n      type: 'REMOVE_PROJECT',\n      payload: project.id,\n    });\n  };\n\n  return {\n    project,\n    datasets,\n    metaColumns,\n    columns,\n    mappings,\n    deleteProject,\n    entries,\n  };\n};\n\nexport const useColumn = columnID => {\n  const [state, dispatch] = useStateValue();\n  const column = state.columns.find(c => c.id === columnID);\n  const entries = state.entries.filter(e => e.column_id === columnID);\n  const mappings = state.mappings.filter(m => m.column_id === columnID);\n  const entryNames = entries.map(e => e.name);\n  const embeddings = state.embeddings.filter(embed =>\n    entryNames.includes(embed.entry),\n  );\n  return {column, entries, mappings, embeddings, dispatch};\n};\n\nexport const useMetaColumn = columnID => {\n  const [state, dispatch] = useStateValue();\n  const metaColumn = state.metaColumns.find(c => c.id === columnID);\n  if (!metaColumn) {\n    return {\n      metaColumn: null,\n      entries: [],\n      mappings: [],\n      embeggins: [],\n      dispatch,\n    };\n  }\n  const entries = state.entries.filter(e =>\n    metaColumn.columns.includes(e.column_id),\n  );\n\n  // Need to consolidate the entries down to as single space.\n  const entryNames = Array.from(new Set(entries.map(e => e.name)));\n  const mergedEntry = entryNames.map(name => {\n    const entry_collection = entries.filter(e => e.name === name);\n    const total = entry_collection.reduce((total, ec) => total + ec.count, 0);\n    return {\n      name,\n      count: total,\n    };\n  });\n\n  const mappings = state.mappings.filter(m => m.column_id === metaColumn.id);\n  const embeddings = state.embeddings.filter(embed =>\n    entryNames.includes(embed.entry),\n  );\n  return {metaColumn, entries: mergedEntry, mappings, embeddings, dispatch};\n};\n\nexport const useProjectStats = () => {\n  const [state] = useStateValue();\n  const {projects, datasets, columns} = state;\n  const project_stats = projects.reduce((stats, project) => {\n    const project_datasets = datasets\n      .filter(d => d.project_id === project.id)\n      .map(d => d.id);\n    const project_columns = columns.filter(c =>\n      project_datasets.includes(c.id),\n    );\n    const project_meta_columns = columns.filter(\n      mc => mc.project_id === project.id,\n    );\n    return [\n      ...stats,\n      {\n        project: project,\n        stats: {\n          datasets: datasets.length,\n          columns: project_columns.length,\n          meta_columns: project_meta_columns.length,\n        },\n      },\n    ];\n  }, []);\n  return project_stats;\n};\n\nexport const useStorage = () => {\n  const [{storage_stats, persisting}] = useStateValue();\n  if (storage_stats) {\n    return {\n      persisting,\n      quota: storage_stats.quota / 1e6,\n      usage: storage_stats.usage / 1e6,\n    };\n  } else {\n    return {};\n  }\n};\n\nexport const useDataset = datasetID => {\n  const [state] = useStateValue();\n  const dataset = state.datasets.find(d => d.id === datasetID);\n  const columns = state.columns.filter(d => d.dataset_id === datasetID);\n  const columnIDs = columns.map(c => c.id);\n  const mappings = state.mappings.filter(m => columnIDs.includes(m.columnID));\n  return {dataset, columns, mappings};\n};\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport FileLoader from './FileLoader';\nimport { useStateValue } from '../contexts/app_context';\nconst uuidv1 = require('uuid/v1');\n\nexport default function UploadModal({ match, history }) {\n  const { projectID } = match.params;\n  const onClose = () => history.goBack();\n  const [, dispatch] = useStateValue();\n\n  const addDatasetToStore = (newDataset, columns, entries) => {\n    const metaColumns = columns\n      .filter(c => c.focusCol)\n      .map(column => ({\n        columns: [column.id],\n        name: column.name,\n        description: '',\n        project_id: projectID,\n        id: uuidv1(),\n      }));\n\n    dispatch({\n      type: 'ADD_DATASETS',\n      payload: [{ ...newDataset, project_id: projectID }],\n    });\n\n    dispatch({\n      type: 'ADD_COLUMNS',\n      payload: columns,\n    });\n\n    dispatch({\n      type: 'ADD_ENTRIES',\n      payload: entries,\n    });\n\n    dispatch({\n      type: 'ADD_META_COLUMNS',\n      payload: metaColumns,\n    });\n\n    onClose();\n  };\n\n  return (\n    <ReactModal\n      className=\"Modal\"\n      overlayClassName=\"Overlay\"\n      isOpen={true}\n      onRequestClose={onClose}>\n      <FileLoader onAddDataset={addDatasetToStore} onClose={onClose} />\n    </ReactModal>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport { useStateValue } from '../contexts/app_context';\n\nexport default function ProjectModal({ match, history }) {\n  const onClose = () => history.goBack();\n  const [, dispatch] = useStateValue();\n\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n\n  const createProject = () => {\n    dispatch({\n      type: 'ADD_PROJECT',\n      payload: { name, description },\n    });\n    onClose();\n  };\n\n  return (\n    <ReactModal\n\n      isOpen={true}\n\n      className=\"Modal\"\n      overlayClassName=\"Overlay\"\n      onRequestClose={onClose}>\n      <div className=\"new-project-modal\">\n        <h1>New Project</h1>\n        <p>Project Name</p>\n        <input\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"name\"\n        />\n        <p>Description</p>\n        <textarea\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n          placeholder=\"description\"\n        />\n        <div className=\"buttons\">\n          <button onClick={createProject}>Create</button>\n          <button className=\"cancel-button\" onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </ReactModal>\n  );\n}\n","const get_embedings_from_server = entries => {\n  let unique_words = new Set();\n  entries.forEach(entry => {\n    entry.name.split(' ').forEach(word => {\n      unique_words.add(word);\n    });\n  });\n\n  return Promise.all(\n    Array.from(unique_words).map(entry =>\n      fetch(\n        `${\n        process.env.REACT_APP_API_URL\n        }/embedding/${entry.toLowerCase().replace(/[\\W_]+/g, '')}`,\n      )\n        .then(r => r.json())\n        .then(r => r[0]),\n    ),\n  );\n};\n\nconst vec_mag = vec => Math.sqrt(vec.reduce((mag, v) => mag + v * v, 0));\n\nconst norm_vec = vec => {\n  const mag = vec_mag(vec);\n  return vec.map(v => v / mag);\n};\n\nconst category_mean = (entries, negativeEntries, embeddings) => {\n  const entry_embeddings = entries\n    .map(entry => embeddings.find(emb => entry === emb.entry))\n    .filter(a => a)\n    .map(embed => [embed.embed, 1]);\n\n  const negative_embeddings = negativeEntries\n    .map(entry => embeddings.find(emb => entry === emb.entry))\n    .filter(a => a)\n    .map(embed => [embed.embed, -1]);\n\n  const all_entry_contributions = entry_embeddings.concat(negative_embeddings);\n\n  const total_vec = all_entry_contributions.reduce((total, embed) => {\n    const weight = embed[1];\n    const vec = embed[0].map(v => v * weight);\n\n    if (total.length === 0) {\n      total = vec;\n    } else {\n      total = vec.map((v, i) => v + total[i]);\n    }\n    return total;\n  }, []);\n\n  return norm_vec(total_vec);\n};\n\nconst vec_dist2 = (v1, v2) =>\n  v1.reduce((total, v, index) => total + (v - v2[index]) * (v - v2[index]), 0);\n\nexport const most_similar_to_category_mean = (\n  entries,\n  negativeEntries,\n  search_entries,\n  embeddings,\n) => {\n  const mean = category_mean(entries, negativeEntries, embeddings);\n\n  const distances = search_entries.map(entry => {\n    const embeding = embeddings.find(e => e.entry === entry.name);\n    if (embeding) {\n      const dist = vec_dist2(norm_vec(embeding.embed), mean);\n      return { suggestion: entry.name, dist: dist };\n    } else {\n      return { suggestion: entry.name, dist: 2000000 };\n    }\n  });\n  return distances\n    .filter(a => a.dist > 0)\n    .filter(a => !entries.includes(a.suggestion))\n    .filter(a => !negativeEntries.includes(a.suggestion))\n    .sort((a, b) => (a.dist > b.dist ? 1 : -1))\n    .slice(0, 8);\n};\n\nconst combined_word_embedings_for_entry = (\n  entry,\n  word_embedings,\n  norm = false,\n) =>\n  entry.name.split(' ').reduce((full_embed, word) => {\n    const word_embed = word_embedings\n      .filter(embed => embed)\n      .find(we => we.key === word.toLocaleLowerCase());\n\n    if (word_embed) {\n      let rep = word_embed.embedding;\n      if (norm) {\n        rep = norm_vec(rep);\n      }\n\n      if (full_embed.length === 0) {\n        full_embed = rep;\n      } else {\n        full_embed = full_embed.map((v, i) => v + rep[i]);\n      }\n    }\n    return full_embed;\n  }, []);\n\nexport const calc_embedings = entries =>\n  get_embedings_from_server(entries).then(word_embedings =>\n    entries.map(entry => ({\n      entry: entry.name,\n      embed: combined_word_embedings_for_entry(entry, word_embedings),\n    })),\n  );\n","import { calc_embedings } from '../utils/calc_embedings';\nconst uuidv1 = require('uuid/v1');\n\nexport function createMapping(selection, columnID, name, dispatch) {\n  const id = uuidv1();\n  dispatch({\n    type: 'ADD_MAPPING',\n    payload: {\n      name: name,\n      entries: selection,\n      negative_examples: [],\n      column_id: columnID,\n      id,\n    },\n  });\n  return id;\n}\n\nexport function renameMapping(mapping, newName, dispatch) {\n  dispatch({\n    type: 'UPDATE_MAPPING',\n    payload: {\n      mapping: {\n        name: newName,\n      },\n      id: mapping.id,\n    },\n  });\n}\n\nexport function loadProject(projectDetails, dispatch) {\n  const {\n    project,\n    datasets,\n    entries,\n    columns,\n    mappings,\n    meta_columns,\n  } = projectDetails;\n\n  dispatch({\n    type: 'ADD_OR_REPLACE_PROJECT',\n    payload: project,\n  });\n\n  datasets.forEach(dataset => {\n    dispatch({\n      type: 'ADD_OR_REPLACE_DATASET',\n      payload: dataset,\n    });\n  });\n\n  columns.forEach(column => {\n    dispatch({\n      type: 'ADD_OR_REPLACE_COLUMN',\n      payload: column,\n    });\n  });\n\n  mappings.forEach(mapping => {\n    dispatch({\n      type: 'ADD_OR_REPLACE_MAPPING',\n      payload: mapping,\n    });\n  });\n\n  meta_columns.forEach(mc => {\n    dispatch({\n      type: 'ADD_OR_REPLACE_METACOLUMN',\n      payload: mc,\n    });\n  });\n\n  entries.forEach(entry => {\n    dispatch({\n      type: 'ADD_OR_REPLACE_ENTRY',\n      payload: entry,\n    });\n  });\n}\n\nexport function removeEntryFromMapping(mapping, entry, dispatch) {\n  dispatch({\n    type: 'UPDATE_MAPPING',\n    payload: {\n      id: mapping.id,\n      mapping: {\n        entries: mapping.entries.filter(e => e !== entry),\n      },\n    },\n  });\n}\n\nexport function deleteMapping(mapping, dispatch) {\n  dispatch({\n    type: 'REMOVE_MAPPING',\n    payload: mapping.id,\n  });\n}\n\nexport function clearMapping(mapping, dispatch) {\n  dispatch({\n    type: 'UPDATE_MAPPING',\n    payload: {\n      id: mapping.id,\n      mapping: {\n        entries: [],\n      },\n    },\n  });\n}\n\nexport function requestEmbedingsForEntries(entries, dispatch) {\n  calc_embedings(entries).then(embeddings => {\n    dispatch({\n      type: 'ADD_EMBEDINGS',\n      payload: embeddings,\n    });\n  });\n}\n\nexport function addNegativeExampleToMapping(mapping, entry, dispatch) {\n  dispatch({\n    type: 'UPDATE_MAPPING',\n    payload: {\n      id: mapping.id,\n      mapping: {\n        negative_examples: [...mapping.negative_examples, entry],\n      },\n    },\n  });\n}\nexport function addEntriesToMapping(mapping, entries, dispatch) {\n  dispatch({\n    type: 'UPDATE_MAPPING',\n    payload: {\n      id: mapping.id,\n      mapping: {\n        entries: [...mapping.entries, ...entries],\n      },\n    },\n  });\n}\n\nexport function updateMetaColumn(id, changes, dispatch) {\n  dispatch({\n    type: 'UPDATE_META_COLUMN',\n    payload: {\n      id,\n      meta_column: changes,\n    },\n  });\n}\n\nexport function unMergeMetaColumn(meta_column, dispatch) {\n  meta_column.columns.forEach(col_id => {\n    dispatch({\n      type: 'CREATE_META_COLUMN_FROM_COL_ID',\n      payload: {\n        col_id,\n        id: uuidv1(),\n        project_id: meta_column.project_id,\n      },\n    });\n  });\n\n  dispatch({\n    type: 'REMOVE_META_COLUMNS',\n    payload: [meta_column.id],\n  });\n\n  dispatch({\n    type: 'REMOVE_MAPPINGS_FOR_METACOLUMN',\n    payload: meta_column.id,\n  });\n}\n\nexport function mergeMetaColumns(meta_columns, dispatch) {\n  const new_col = meta_columns[0];\n  const ids = meta_columns.map(mc => mc.id);\n\n  meta_columns.slice(1).forEach(mc => {\n    new_col.columns = [...new_col.columns, ...mc.columns];\n  });\n\n  dispatch({\n    type: 'REMOVE_META_COLUMNS',\n    payload: ids,\n  });\n\n  dispatch({\n    type: 'ADD_META_COLUMNS',\n    payload: [new_col],\n  });\n}\n","import React, {useState, useCallback} from 'react';\nimport ReactModal from 'react-modal';\nimport {useStateValue} from '../contexts/app_context';\nimport {useDropzone} from 'react-dropzone';\nimport {faFile} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {loadProject} from '../contexts/actions';\n\nimport {faColumns, faDatabase} from '@fortawesome/free-solid-svg-icons';\n\nexport default function ProjectModal({match, history}) {\n  const onClose = () => history.goBack();\n  const [, dispatch] = useStateValue();\n  const [error] = useState(null);\n\n  const [project, setProject] = useState(null);\n\n  const onDrop = useCallback(files => {\n    const file = files[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = f => {\n      setProject(JSON.parse(reader.result));\n    };\n  }, []);\n\n  const loadIt = () => {\n    loadProject(project, dispatch);\n    history.goBack();\n  };\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n  return (\n    <ReactModal\n      isOpen={true}\n      onRequestClose={onClose}\n      className=\"Modal\"\n      overlayClassName=\"Overlay\">\n      <div className=\"load-project-modal\">\n        <h1>{project ? project.project.name : 'Load Project'}</h1>\n        <div className=\"content\">\n          {project ? (\n            <div>\n              <section>\n                <header\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                  }}>\n                  <FontAwesomeIcon\n                    icon={faDatabase}\n                    style={{marginRight: '20px'}}\n                  />\n                  <h2>Datasets</h2>\n                </header>\n                <p>{project.project.description}</p>\n                {project.datasets.map(d => (\n                  <p>{d.name}</p>\n                ))}\n              </section>\n              <section>\n                <header\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                  }}>\n                  <FontAwesomeIcon\n                    icon={faColumns}\n                    style={{marginRight: '20px'}}\n                  />\n                  <h2>Columns</h2>\n                </header>\n                {project.meta_columns.map(mc => (\n                  <p>{mc.name}</p>\n                ))}\n              </section>\n              <button onClick={loadIt}>Load</button>\n            </div>\n          ) : (\n            <div className={'file-tab'} {...getRootProps()}>\n              <FontAwesomeIcon icon={faFile} />\n              <input\n                {...getInputProps({\n                  accept: ['text/csv', 'application/vnd.ms-excel'],\n                })}\n              />\n              {isDragActive ? (\n                <p>Drop the files here ... </p>\n              ) : (\n                <p>Drag 'n' drop project file here or click to load project</p>\n              )}\n              {error && <p>{error}</p>}\n            </div>\n          )}\n        </div>\n      </div>\n    </ReactModal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function GHPagesRedirect() {\n  const [redirect, setRedirect] = useState(null);\n  useEffect(() => {\n    // This is for dealing with the 404 redirect issue on gh pages\n    var target = sessionStorage.redirect;\n    delete sessionStorage.redirect;\n\n    if (target && target !== window.location.href) {\n      let to = target;\n      if (process.env.PUBLIC_URL) {\n        to =\n          '/' +\n          to\n            .split('/')\n            .slice(4)\n            .join('/');\n      }\n      setRedirect(to);\n    }\n  }, []);\n\n  if (redirect) {\n    return <Redirect to={redirect} />;\n  } else {\n    return <React.Fragment />;\n  }\n}\n","import React, { useState } from 'react';\nimport streamSaver from 'streamsaver';\n\nexport default function ApplyMapping(props) {\n  const { file, columns } = props;\n\n  const [addColumns, setAddColumns] = useState(true);\n  const [status, setStatus] = useState('pending');\n\n  const startProcessing = () => {\n    setStatus('running');\n    const fileStream = streamSaver.createWriteStream('processed.txt', {\n      size: 22,\n    });\n    new Response('StreamSaver is awesome').body.pipeTo(fileStream).then(\n      () => {\n        console.log('SAVED');\n      },\n      () => {\n        console.log('ERROR');\n      },\n    );\n  };\n\n  return (\n    <div className=\"apply-mapping\">\n      {status === 'pending' && (\n        <React.Fragment>\n          <p id={file.name}>{file.name}</p>\n          <div className=\"options\">\n            <p>Applying mappings to {columns.length} columns</p>\n            Add Columns:{' '}\n            <input\n              type=\"checkbox\"\n              checked={addColumns}\n              onChange={e => setAddColumns(e.target.checked)}\n            />\n            Treat Unmapped as Unknown: <input type=\"checkbox\" />\n            <button onClick={startProcessing}>Apply Mapping</button>\n          </div>\n        </React.Fragment>\n      )}\n      {status === 'running' && <h2>Running</h2>}\n      {status === 'done' && <h2>Done</h2>}\n    </div>\n  );\n}\n","import React, { useState, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport ApplyMapping from './ApplyMapping'\nimport { useDataset } from '../contexts/app_context'\n\nimport { useDropzone } from 'react-dropzone';\n\nexport default function ApplyMappingsModal({ match, history }) {\n\n  const [files, setFiles] = useState(null);\n  const [error, setError] = useState(null);\n  const { datasetID } = match.params\n\n  const onClose = () => {\n    history.goBack()\n  }\n\n  const { columns, mappings } = useDataset(datasetID);\n\n  const onDrop = useCallback(files => {\n    if (files.every(file => file.name.split('.').includes('csv'))) {\n      setFiles(files);\n    } else {\n      setError(\n        \"Smoosher currently only supports CSV's please just upload those!\",\n      );\n    }\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <ReactModal isOpen={true} onRequestClose={onClose}\n      className=\"Modal\"\n      overlayClassName=\"Overlay\"\n\n    >\n      {error && <h1>{error}</h1>}\n\n      {files ? (\n        <div>\n          {files.map(file => (\n            <ApplyMapping\n              file={file}\n              columns={columns}\n              mappings={mappings}\n            />\n\n          ))}\n        </div>\n      ) : (\n          <React.Fragment>\n            <h1>Select files to apply mapping to</h1>\n            <div className=\"file-uploader\">\n              <div {...getRootProps()}>\n                <input\n                  {...getInputProps({\n                    accept: ['text/csv', 'application/vnd.ms-excel'],\n                  })}\n                />\n\n                {isDragActive ? (\n                  <p>Drop the files here ... </p>\n                ) : (\n                    <p>Drag 'n' drop files to apply mapping</p>\n                  )}\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n    </ReactModal>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport { useProject } from '../contexts/app_context';\nimport { exportPythonCode } from '../utils/file_parsing';\n\nexport default function CodeExportModal({ match, history }) {\n  const onClose = () => history.goBack();\n  // const [_, dispatch] = useStateValue();\n  const { projectID } = match.params;\n  const { project, datasets, metaColumns, columns, mappings } = useProject(\n    projectID,\n  );\n\n  const [changeNonMapped, setChangeNonMapped] = useState(false);\n  const [createNewColumns, setCreateNewColumns] = useState(false);\n  const [combineDatasets, setCombineDatasets] = useState(true);\n  const [valueForNonMapped, setValueForNonMapped] = useState('unknown');\n\n  const doExport = () => {\n    const settings = {\n      changeNonMapped,\n      createNewColumns,\n      combineDatasets,\n      valueForNonMapped,\n    };\n\n    exportPythonCode(\n      project,\n      datasets,\n      metaColumns,\n      columns,\n      mappings,\n      settings,\n    );\n  };\n\n  return (\n    <ReactModal\n      className=\"Modal\"\n      overlayClassName=\"Overlay\"\n      isOpen={true}\n      onRequestClose={onClose}>\n      <div className=\"code-export-modal\">\n        {project && (\n          <React.Fragment>\n            <div>\n              <h1>{project.name}</h1>\n              <p>Export Code</p>\n            </div>\n            <div className='code-export-options'>\n              <span>\n                Change non mapped entries?\n                <input\n                  type=\"checkbox\"\n                  value={changeNonMapped}\n                  onChange={e => setChangeNonMapped(e.target.checked)}\n                />\n              </span>\n              {changeNonMapped && (\n                <span>\n                  Value for non mapped entries?\n                  <input\n                    type=\"text\"\n                    value={valueForNonMapped}\n                    onChange={e => setValueForNonMapped(e.target.value)}\n                  />{' '}\n                </span>\n              )}\n              <span>\n                Create new columns?{' '}\n                <input\n                  type=\"checkbox\"\n                  value={createNewColumns}\n                  onChange={e => setCreateNewColumns(e.target.checked)}\n                />{' '}\n              </span>\n              <span>\n                Combine datasets in to single file?{' '}\n                <input\n                  type=\"checkbox\"\n                  value={combineDatasets}\n                  onChange={e => setCombineDatasets(e.target.checked)}\n                />{' '}\n              </span>\n            </div>\n\n            <div className={'export-instructions'}>\n              <p>\n                Click export to download a zip file with everything you need to\n                apply your mapping.\n              </p>\n              <p>The code will do the following:</p>\n              <ul>\n                <li>\n                  Load the files you worked on from the \"put_your_files_in_here\"\n                  folder\n                </li>\n                <li>\n                  Combine and rename columns from each dataset as you indicated\n                </li>\n                <li>Apply the new taxonomies you produced to those columns</li>\n                <li>Export the results to the \"results\" folder</li>\n              </ul>\n              <p>\n                The script that does all this is called \"process.py\" you can\n                tweak it to suit your needs\n              </p>\n            </div>\n            <div className=\"buttons\">\n              <button onClick={doExport}>Export</button>\n              <button onClick={onClose}>Cancel</button>\n            </div>\n          </React.Fragment>\n        )}\n      </div>\n    </ReactModal>\n  );\n}\n","import React, { useState } from 'react';\nimport ReactDataGrid from 'react-data-grid';\n\nexport default function TablePreview(props) {\n  const { data } = props;\n\n  const columns = Object.keys(data[0]).map(k => ({ key: k, name: k }));\n  const [rows, setRows] = useState(data);\n\n  const sortRows = (initalRows, sortColumn, sortDirection) => rows => {\n    const comp = (a, b) => {\n      if (sortDirection === 'ASC') {\n        return a[sortColumn] > b[sortColumn] ? 1 : -1;\n      } else if (sortDirection === 'DESC') {\n        return a[sortColumn] < b[sortColumn] ? 1 : -1;\n      }\n    };\n    return sortDirection === 'NONE' ? initalRows : [...rows].sort(comp);\n  };\n\n  if (data.length === 0) {\n    return <h1> No data to show</h1>;\n  }\n\n  return (\n    <ReactDataGrid\n      columns={columns}\n      rowGetter={i => rows[i]}\n      rowsCount={data.length}\n      onGridSort={(sortColumn, sortDirection) =>\n        setRows(sortRows(data, sortColumn, sortDirection))\n      }\n    />\n  );\n}\n\nTablePreview.defaultProps = {\n  data: [],\n  columns: [],\n};\n","import React from 'react';\nimport TablePreview from '../components/TablePreview';\nimport { useStateValue } from '../contexts/app_context';\n\nexport default function DatasetPage({ match }) {\n  const datasetID = match.params.datasetID;\n\n  const [{ datasets, columns },] = useStateValue();\n  const dataset = datasets.find(d => d.id === datasetID);\n\n  const columnsForDataset = columns.filter(c => c.dataset_id === datasetID);\n  return dataset ? (\n    <React.Fragment>\n      <div className=\"datatable full_card\">\n        <TablePreview data={dataset.sample} columns={columnsForDataset} />\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-around',\n            marginTop: '20px',\n          }}>\n        </div>\n      </div>\n    </React.Fragment>\n  ) : (\n      <h2>Could not find dataset</h2>\n    );\n}\n\n","import React from 'react';\n\nexport default function EntryCard({ entry, selected = false, onToggleSelect }) {\n  return (\n    <div\n      className={`entry-card card ${selected ? 'selected' : ''}`}\n      onClick={() => onToggleSelect(entry)}>\n      <h3>{entry.name}</h3>\n      <p>{entry.count} occurrences</p>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport { faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport default function OrderBySelector({ onChange }) {\n  const showDropDown = () => {\n    setShowDropdown(true)\n  }\n\n  const selectOption = (option) => {\n    setShowDropdown(false)\n    setSelected(option)\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  const [show, setShowDropdown] = useState(false)\n  const [selected, setSelected] = useState(\"Alphabetically\")\n\n  const options = [\"Alphabetically\", \"Occurances\"]\n\n  return (\n    <div className=\"order-by\">\n      <p>Order By: </p>\n      <ul>\n        <li onClick={showDropDown}>{selected} <FontAwesomeIcon icon={faSortDown} /> </li>\n        {options.filter(o => o !== selected && show).map(o => <li\n          onClick={() => selectOption(o)}\n        >{o}</li>)}\n      </ul>\n    </div>\n  )\n\n}\n","import React from 'react';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nexport default function EntryPill({entry, onRemove}) {\n  return (\n    <span className=\"entry-pill\">\n      <span>{entry}</span>\n      <FontAwesomeIcon icon={faTimes} onClick={() => onRemove(entry)} />\n    </span>\n  );\n}","import React from 'react'\nimport EntryPill from './EntryPill'\n\nexport default function SelectedEntriesList({ selection, onRemoveSelection, onClearAll }) {\n    return (\n        <div className='selected-entry-list'>\n            {selection.length === 0 ?\n                <span>Click on entries to select them</span>\n                :\n                <span>Selections ({selection.length}):</span>\n            }\n            <ul >\n                {selection.reverse().map(entry => <li><EntryPill onRemove={onRemoveSelection} entry={entry} /> </li>)}\n            </ul>\n            {(selection.length > 0) &&\n                <button className='clear-all text-button' onClick={onClearAll}>Clear All</button>\n            }\n        </div>\n    )\n}\n\nSelectedEntriesList.defaultProps = {\n    selection: []\n}\n\n","import React, { useState } from 'react';\nimport EntryCard from './EntryCard';\nimport OrderBySelector from './OrderBySelector';\nimport { faGlassCheers } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SelectedEntriesList from './SelectedEntriesList'\n\nexport default function EntryTable({\n  entries,\n  style,\n  onToggleSelection,\n  onClearSelection,\n  selection,\n}) {\n  const [order, setOrder] = useState('Occurances');\n\n  const toggleSelection = entry => {\n    if (onToggleSelection) {\n      onToggleSelection(entry);\n    }\n  };\n\n  const orderKey = { Alphabetically: 'name', Occurances: 'count' }[order];\n\n  let orderedEntries = entries.sort((a, b) =>\n    a[orderKey] > b[orderKey] ? 1 : -1,\n  );\n\n  if (orderKey === 'count') {\n    orderedEntries.reverse();\n  }\n\n  return (\n    <div style={style} className=\"entry-table\">\n      <div className=\"entry-table-filters\">\n        <SelectedEntriesList selection={selection} onRemoveSelection={toggleSelection} onClearAll={onClearSelection} />\n        <OrderBySelector onChange={order => setOrder(order)} />\n\n      </div>\n      <div className=\"entry-table-entries\">\n        {orderedEntries.length > 0 ? (\n          orderedEntries.map(entry => (\n            <EntryCard\n              key={entry.name}\n              entry={entry}\n              selected={selection.includes(entry.name)}\n              onToggleSelect={toggleSelection}\n            />\n          ))\n        ) : (\n            <div className=\"all-done\">\n              <h1>You really smooshed the crap out of that column.</h1>\n              <h1>\n                {[...Array(5)].map(() => (\n                  <FontAwesomeIcon icon={faGlassCheers} />\n                ))}\n              </h1>\n            </div>\n          )}\n      </div>\n    </div>\n  );\n}\n\nEntryTable.defaultProps = {\n  style: {},\n};\n","import React, {useState,useEffect} from 'react'\n\nimport {faEdit} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\nexport default function EditableText({text, onUpdate}){\n  const [localText, setLocalText] = useState(text)\n  const [editing, setEditing] = useState(false)\n\n  useEffect(()=>{\n     setLocalText(text)\n  },[text])\n\n  return  editing ? \n      <input onChange={(e)=>setLocalText(e.target.value)} onBlur={()=> { setEditing(false); onUpdate(localText)  } } value={localText} /> \n    : \n    \n      <h3>\n          {localText} <FontAwesomeIcon onClick={()=>setEditing(true)} icon={faEdit} />\n      </h3>\n    \n    \n}\n","import React, { useState } from 'react';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport EditableText from './EditableText';\n\nexport default function MappingFocus({\n  mapping,\n  onRemoveEntryFromMapping,\n  onRenameMapping,\n  onClearMapping,\n  onDeleteMapping,\n  onAddSuggestionToMapping,\n  onAddNegativeExampleToMapping,\n  suggestions,\n  style,\n}) {\n  const [suggestionType, setSuggestionType] = useState('text');\n\n  const removeEntryFromMapping = entry => {\n    if (onRemoveEntryFromMapping) {\n      onRemoveEntryFromMapping(entry, mapping);\n    }\n  };\n\n  const addSuggestionToMapping = entry => {\n    if (onAddSuggestionToMapping) {\n      onAddSuggestionToMapping(entry.suggestion);\n    }\n  };\n\n  const updateMappingName = name => {\n    if (onRenameMapping) {\n      onRenameMapping(mapping, name);\n    }\n  };\n\n  const clearMapping = name => {\n    if (onClearMapping) {\n      onClearMapping(mapping);\n    }\n  };\n\n  const deleteMapping = name => {\n    if (onDeleteMapping) {\n      onDeleteMapping(mapping);\n    }\n  };\n\n  const addNegativeExampleToMapping = (entry) => {\n\n    if (onAddNegativeExampleToMapping) {\n      onAddNegativeExampleToMapping(entry.suggestion)\n    }\n  }\n\n  const suggestionsByType = suggestions[suggestionType];\n\n  return (\n    <div className=\"mapping-focus\" style={style}>\n      <EditableText text={mapping.name} onUpdate={updateMappingName} />\n      <div className=\"include-list\">\n        <h4>Includes</h4>\n        <ul>\n          {mapping.entries.map(entry => (\n            <li>\n              {entry}{' '}\n              <button\n                onClick={() => removeEntryFromMapping(entry)}\n                className={'small-button round-button'}>\n                <FontAwesomeIcon icon={faTimes} />{' '}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"keyword-match\">\n        <h4>\n          Suggestions by:{' '}\n          <span\n            style={\n              suggestionType === 'text'\n                ? { fontWeight: 'bold' }\n                : { fontWeight: 'lighter' }\n            }\n            onClick={() => setSuggestionType('text')}>\n            text\n          </span>{' '}\n          /{' '}\n          <span\n            style={\n              suggestionType === 'meaning'\n                ? { fontWeight: 'bold' }\n                : { fontWeight: 'lighter' }\n            }\n            onClick={() => setSuggestionType('meaning')}>\n            meaning\n          </span>\n        </h4>\n        <ul>\n          {suggestionsByType.map(entry => (\n            <li>\n              {entry.suggestion}{' '}\n              <div className=\"SuggestionActionButtons\">\n                <button\n                  className={'small-button round-button'}\n                  onClick={() => addSuggestionToMapping(entry)}>\n                  <FontAwesomeIcon icon={faCheck} />\n                </button>\n                <button className={'small-button round-button'}\n                  onClick={() => addNegativeExampleToMapping(entry)}\n                >\n                  <FontAwesomeIcon\n                    icon={faTimes} />\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className={'ActionButtons'}>\n        <button onClick={clearMapping} className={'mid-button'}>\n          Clear Mapping\n        </button>\n        <button onClick={deleteMapping} className={'mid-button'}>\n          Delete Mapping\n        </button>\n      </div>\n    </div>\n  );\n}\n\nMappingFocus.defaultProps = {\n  style: {},\n  meaningSuggestions: [],\n  textSuggestions: [],\n};\n","import React from 'react';\n\nexport default function MappingsMenu({\n  mappings = [],\n  selected,\n  onMappingSelected,\n  style\n}) {\n\n  const mappingSelected = (mapping) => {\n    if (onMappingSelected) {\n      onMappingSelected(mapping)\n    }\n  }\n\n  return (\n    <div class=\"mappings-menu\" style={style}>\n      <h3>\n        Merged Groups <span class=\"Pill\">{mappings.length}</span>{' '}\n      </h3>\n      <ul>\n        {mappings.map(mapping => (\n          <li\n            className={\n              selected && mapping.name === selected.name ? 'selected' : ''\n            }\n            onClick={() => mappingSelected(mapping)}>\n            {mapping.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMappingsMenu.defaultProps = {\n  mappings: [],\n  style: {},\n};\n","import React from 'react';\nimport MappingFocus from './MappingFocus';\nimport MappingsMenu from './MappingsMenu';\n\nexport default function MappingsArea({\n  mappings,\n  selection,\n  onMappingSelected,\n  onRenameMapping,\n  onRemoveEntryFromMapping,\n  onDeleteMapping,\n  onClearMapping,\n  onAddEntryToMapping,\n  onAddSuggestionToMapping,\n  onAddNegativeExampleToMapping,\n  suggestions,\n  style,\n}) {\n  return (\n    <div className=\"mappings-area\" style={style}>\n      <MappingsMenu\n        mappings={mappings}\n        selected={selection}\n        onMappingSelected={onMappingSelected}\n      />\n      {selection && (\n        <MappingFocus\n          mapping={selection}\n          onRemoveEntryFromMapping={onRemoveEntryFromMapping}\n          onRenameMapping={onRenameMapping}\n          onDeleteMapping={onDeleteMapping}\n          onClearMapping={onClearMapping}\n          onAddEntryToMapping={onAddEntryToMapping}\n          onAddSuggestionToMapping={onAddSuggestionToMapping}\n          suggestions={suggestions}\n          onAddNegativeExampleToMapping={onAddNegativeExampleToMapping}\n        />\n      )}\n    </div>\n  );\n}\n\nMappingsArea.defaultProps = {\n  style: {},\n};\n","import * as lev from 'fast-levenshtein';\n\n\nconst cacheSimilarities = {};\n\nexport const suggestForMapping = (mapping, entries) => {\n  const res = [];\n  mapping.forEach(mapping_entry => {\n    entries.forEach(entry => {\n      const cacheKey = [mapping_entry, entry.name].join('_');\n\n      if (!mapping.includes(entry)) {\n        if (cacheSimilarities[cacheKey]) {\n          res.push({\n            suggestion: entry.name,\n            score: cacheSimilarities[cacheKey],\n          });\n        } else {\n          const dist = lev.get(mapping_entry, entry.name);\n          cacheSimilarities[cacheKey] = dist;\n          res.push({ suggestion: entry.name, score: dist });\n        }\n      }\n    });\n  });\n  return res.sort((a, b) => (a.score > b.score ? 1 : -1)).slice(0, 5);\n};\n","import React, { useState, useEffect } from 'react';\nimport SearchBar from '../components/SearchBar';\nimport EntryTable from '../components/EntryTable';\nimport MappingsArea from '../components/MappingsArea';\nimport useFuse from 'react-use-fuse';\nimport { suggestForMapping } from '../utils/text_clustering';\nimport { most_similar_to_category_mean } from '../utils/calc_embedings';\n\nimport {\n  createMapping,\n  renameMapping,\n  addEntriesToMapping,\n  addNegativeExampleToMapping,\n  removeEntryFromMapping,\n  deleteMapping,\n  clearMapping,\n  requestEmbedingsForEntries,\n} from '../contexts/actions';\nimport { useStateValue, useMetaColumn } from '../contexts/app_context';\n\nexport default function ColumnPage({ match }) {\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [selectedMappingID, setSelectedMappingID] = useState(null);\n  const [entrySelection, setEntrySelection] = useState([]);\n  const { columnID } = match.params;\n\n  const { entries, mappings, embeddings, dispatch } = useMetaColumn(columnID);\n  const selectedMapping = mappings.find(m => m.id === selectedMappingID);\n\n  useEffect(() => {\n    if (entries) {\n      requestEmbedingsForEntries(entries, dispatch);\n    }\n  }, [JSON.stringify(entries)]);\n\n  const non_mapped_entries = entries.filter(\n    entry => !mappings.some(m => m.entries.includes(entry.name)),\n  );\n\n  const { result, search } = useFuse({\n    data: non_mapped_entries,\n    options: {\n      shouldSort: true,\n      findAllMatches: true,\n      keys: ['name'],\n      caseSensitive: false,\n    },\n  });\n\n  const filteredEntries = result;\n\n  const toggleEnrtySelection = entry => {\n    const entryName = typeof entry == 'string' ? entry : entry.name;\n\n    if (entrySelection.includes(entryName)) {\n      setEntrySelection(entrySelection.filter(s => s !== entryName));\n    } else {\n      setEntrySelection([...entrySelection, entryName]);\n    }\n  };\n\n  const onCreateMapping = () => {\n    const id = createMapping(\n      entrySelection,\n      columnID,\n      entrySelection[0],\n      dispatch,\n    );\n    setEntrySelection([]);\n    setSelectedMappingID(id);\n  };\n\n  const onRenameMapping = (mapping, name) => {\n    renameMapping(mapping, name, dispatch);\n  };\n\n  const onRemoveEntryFromMapping = (entry, mapping) => {\n    removeEntryFromMapping(mapping, entry, dispatch);\n  };\n\n  const onClearMapping = mapping => {\n    clearMapping(mapping, dispatch);\n  };\n\n  const onDeleteMapping = mapping => {\n    deleteMapping(mapping, dispatch);\n  };\n\n  const clearSelection = () => {\n    setEntrySelection([]);\n  };\n\n  const onAddEntriesToMapping = (\n    entriesToAdd,\n    shouldClearSelection = false,\n  ) => {\n    addEntriesToMapping(selectedMapping, entriesToAdd, dispatch);\n    if (shouldClearSelection) {\n      clearSelection();\n    }\n  };\n\n  const onAddNegativeExampleToMapping = entry => {\n    addNegativeExampleToMapping(selectedMapping, entry, dispatch);\n  };\n\n  //Remove any entries that are already in a mapping\n\n  const updateSearch = text => {\n    setSearchTerm(text);\n    search(text);\n  };\n\n  const suggestionsAvaliable = embeddings && selectedMapping;\n\n  const meaningSuggestions = suggestionsAvaliable\n    ? most_similar_to_category_mean(\n      selectedMapping.entries,\n      selectedMapping.negative_examples,\n      non_mapped_entries,\n      embeddings,\n    )\n    : [];\n\n  const textSuggestions = suggestionsAvaliable\n    ? suggestForMapping(selectedMapping.entries, non_mapped_entries)\n    : [];\n\n  const suggestions = { text: textSuggestions, meaning: meaningSuggestions };\n\n  const { cache_loaded } = useStateValue();\n\n  const stats = {\n    mappings: mappings.length,\n    total_rows: entries.reduce((total, e) => total + e.count, 0),\n    total_mapped_rows: mappings\n      .map(m =>\n        m.entries.reduce(\n          (total, entry) => total + entries.find(e => e.name === entry).count,\n          0,\n        ),\n      )\n      .reduce((total, map) => total + map, 0),\n    total_entries_in_mappings: mappings.reduce(\n      (total, m) => total + m.entries.length,\n      0,\n    ),\n  };\n\n  if (!cache_loaded) {\n    return (\n      <div className=\"column-page\">\n        <SearchBar\n          style={{ gridArea: 'header', width: '50%', justifySelf: 'center' }}\n          onChange={updateSearch}\n          onClear={() => updateSearch('')}\n          value={searchTerm}\n          prompt=\"Search for entries by typing here...\"\n        />\n        <EntryTable\n          entries={filteredEntries}\n          style={{\n            gridArea: 'table',\n            overflowY: 'hidden',\n            width: '100%',\n            height: '100%',\n          }}\n          onToggleSelection={toggleEnrtySelection}\n          selection={entrySelection}\n          onClearSelection={clearSelection}\n          {...entries}\n        />\n        <div className=\"stats-and-actions\">\n          <div className=\"stats\">\n            <p>\n              <span>{stats.total_entries_in_mappings}</span> /{' '}\n              <span>{entries.length}</span> entries |{' '}\n              <span>{stats.total_mapped_rows}</span> /{' '}\n              <span>{stats.total_rows}</span> rows\n            </p>\n          </div>\n          <div className=\"entry-action-buttons\">\n            <button\n              disabled={entrySelection.length === 0}\n              onClick={onCreateMapping}>\n              New Mapping {entrySelection.length}\n            </button>\n            <button\n              disabled={!(entrySelection.length > 0 && selectedMappingID)}\n              onClick={() => onAddEntriesToMapping(entrySelection, true)}>\n              Add to Mapping\n            </button>\n            <button\n              onClick={() =>\n                createMapping(non_mapped_entries, columnID, 'Other', dispatch)\n              }>\n              Map Remaining To Other\n            </button>\n          </div>\n        </div>\n        <MappingsArea\n          mappings={mappings}\n          selection={mappings.find(m => m.id === selectedMappingID)}\n          style={{ gridArea: 'mappings' }}\n          onMappingSelected={s => setSelectedMappingID(s.id)}\n          onRenameMapping={onRenameMapping}\n          onRemoveEntryFromMapping={onRemoveEntryFromMapping}\n          onDeleteMapping={onDeleteMapping}\n          onClearMapping={onClearMapping}\n          suggestions={suggestions}\n          onAddSuggestionToMapping={suggestion =>\n            onAddEntriesToMapping([suggestion])\n          }\n          onAddNegativeExampleToMapping={onAddNegativeExampleToMapping}\n          {...mappings}\n          syle={{ height: '300px' }}\n        />\n      </div>\n    );\n  } else {\n    return <h1>Loading</h1>;\n  }\n}\n","import React from 'react';\nimport {\n  faColumns,\n  faDatabase,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function ProjectCard({ project, stats }) {\n  return (\n    <div className=\"project-card card\">\n      <h2 className=\"title\">{project.name}</h2>\n      <p className=\"description\">{project.description}</p>\n      <div className=\"project-card-stats\">\n        <span>\n          {stats.columns} <FontAwesomeIcon icon={faColumns} />\n        </span>\n        <span>\n          {stats.datasets} <FontAwesomeIcon icon={faDatabase} />\n        </span>\n        <span>\n          {stats.meta_columns} <FontAwesomeIcon icon={faDatabase} />\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport const EmptyProjectCard = ({ prompt, icon }) => (\n  <div className=\"project-card card new-project-card\">\n    <h2 className=\"title\">{prompt}</h2>\n    <FontAwesomeIcon icon={icon} size={'3x'} />\n  </div>\n);\n","import React from 'react';\nimport ProjectCard, { EmptyProjectCard } from '../components/ProjectCard';\nimport { useProjectStats, useStorage } from '../contexts/app_context';\nimport { Link } from 'react-router-dom';\n\nimport { faPlus, faUpload } from '@fortawesome/free-solid-svg-icons';\n\nexport default function WelcomePage() {\n  const projects = useProjectStats();\n  const { quota, usage } = useStorage();\n\n  return (\n    <div className=\"welcome-page page\">\n      <header className=\"welcome-page-header\">\n        <h1 className=\"large-title-header\">smooshr</h1>\n        <p>Wrangle those messy datasets</p>\n        <p className=\"feedback\">\n          We need your help to make smooshr better! Try out our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://docs.google.com/document/d/1ANrFqNZKCYR4LogOKPvYVHZAbp1iiK3gpknPlNZF6Lw/\">\n            tutorial\n          </a>{' '}\n          and leave your thoughts on our{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://airtable.com/shrMCZrvP7467LNG7\">\n            feedback form\n          </a>\n        </p>\n      </header>\n      {projects && (\n        <div className=\"projects-area\">\n          <div className=\"\">\n            <div className=\"region-header\">\n              <h2>local projects</h2>\n            </div>\n            <div className=\"region-list\">\n              {projects.map(p => (\n                <Link to={`/project/${p.project.id}`}>\n                  <ProjectCard project={p.project} stats={p.stats} />\n                </Link>\n              ))}\n              <Link to={'/new_project'}>\n                <EmptyProjectCard prompt={'New Project'} icon={faPlus} />\n              </Link>\n              <Link to={'/load_project'}>\n                <EmptyProjectCard prompt={'Load Project'} icon={faUpload} />\n              </Link>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"storage\">\n        <p>smooshr processes and stores all data locally on your machine.</p>\n        {quota && (\n          <p>\n            It is currently using {usage.toLocaleString()} Mb of{' '}\n            {quota.toLocaleString()} Mb.\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport EditableText from './EditableText';\nimport { Link } from 'react-router-dom';\n\nexport default function ColumnCard({\n  name,\n  description,\n  fromColumns,\n  selected,\n  onClick,\n  onUpdate,\n  onUnmerge,\n  link,\n}) {\n  const totalUnique = fromColumns.reduce((tot, c) => tot + c.unique, 0);\n  return (\n    <div\n      onClick={onClick}\n      className={`column-card card ${selected ? 'selected' : ''}`}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n        }}>\n        <EditableText text={name} onUpdate={onUpdate} />\n        <h2>{totalUnique}</h2>\n      </div>\n      <p className=\"description\">{description}</p>\n\n      {fromColumns.map(c => (\n        <p key={c.name}>\n          {c.name} | {c.dataset.name}\n        </p>\n      ))}\n      <div className=\"column-action-buttons\">\n        {fromColumns.length > 1 && (\n          <button onClick={onUnmerge}>Split Column</button>\n        )}\n        <Link className=\"work-on-taxonomy-button\" to={link}>\n          <button>Work on taxonomy</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useStateValue, useProject } from '../contexts/app_context';\nimport { Link } from 'react-router-dom';\nimport ColumnCard from '../components/ColumnCard';\nimport TablePreview from '../components/TablePreview';\nimport {\n  mergeMetaColumns,\n  updateMetaColumn,\n  unMergeMetaColumn,\n} from '../contexts/actions';\nimport {\n  saveProject,\n} from '../utils/file_parsing';\n\nimport {\n  faColumns,\n  faDatabase,\n  faFistRaised,\n  faInfoCircle,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function ProjectPage(props) {\n  const { match, history } = props;\n  const { projectID } = match.params;\n  const {\n    project,\n    datasets,\n    metaColumns,\n    columns,\n    mappings,\n    entries,\n    deleteProject,\n  } = useProject(projectID);\n\n  const [selectedDatasetName, setSelectedDatasetName] = useState(\n    datasets && datasets.length > 0 ? datasets[0].name : null,\n  );\n\n  // Used to set the selected dataset to the first one on inital load\n  useEffect(() => {\n    if (datasets.length > 0 && !selectedDatasetName) {\n      setSelectedDatasetName(datasets[0].name);\n    }\n  }, [datasets, selectedDatasetName]);\n\n  const selectedDataset = datasets.find(d => d.name === selectedDatasetName);\n\n  const [, dispatch] = useStateValue();\n  const [selectedColumns, setSelectedColumns] = useState([]);\n\n  const onSaveProject = () => {\n    saveProject(\n      project,\n      datasets,\n      metaColumns,\n      columns,\n      mappings,\n      entries,\n      {},\n    );\n  };\n\n  const changeMCName = (mc, name) => {\n    updateMetaColumn(mc.id, { name }, dispatch);\n  };\n  const deleteThisProject = () => {\n    deleteProject();\n    history.push('/');\n  };\n\n  const toggleSelectedColumn = id => {\n    if (selectedColumns.includes(id)) {\n      setSelectedColumns(selectedColumns.filter(cid => cid !== id));\n    } else {\n      setSelectedColumns([...selectedColumns, id]);\n    }\n  };\n\n  const seperateMetaDataColumn = id => {\n    unMergeMetaColumn(metaColumns.find(mc => mc.id === id), dispatch);\n  };\n\n  const dereferenceColumn = colID => {\n    const column = columns.find(c => c.id === colID);\n    return {\n      dataset: datasets.find(d => d.id === column.dataset_id),\n      name: column.name,\n      id: column.id,\n      unique: column.unique,\n    };\n  };\n\n  const mergeColumns = () => {\n    const toMerge = metaColumns.filter(mc => selectedColumns.includes(mc.id));\n    mergeMetaColumns(toMerge, dispatch);\n    setSelectedColumns([]);\n  };\n\n  return (\n    <div className=\"project-page page\">\n      {project ? (\n        <React.Fragment>\n          <div className=\"actions\">\n            <div className=\"region-header\">\n              <h2>\n                <FontAwesomeIcon\n                  icon={faFistRaised}\n                  style={{ marginRight: '20px' }}\n                />\n                Actions\n              </h2>\n\n              <div className=\"\">\n                <button onClick={onSaveProject}>Export Project</button>\n                <Link to={`/project/${projectID}/export`}>\n                  <button>Export Python code</button>\n                </Link>\n                <button onClick={deleteThisProject}>Delete Project</button>\n              </div>\n            </div>\n          </div>\n\n\n\n          <div className=\"metadata\">\n            <div className=\"region-header\">\n              <h2>\n                <FontAwesomeIcon\n                  icon={faInfoCircle}\n                  style={{ marginRight: '20px' }}\n                />\n                Metadata\n              </h2>\n              <div className=\"properties\">\n                <p>Name: {project.name}</p>\n                <p>Description: {project.description}</p>\n\n              </div>\n            </div>\n          </div>\n\n          <div className=\"columns region\">\n            <div className=\"region-header\">\n              <h2>\n                <FontAwesomeIcon\n                  icon={faColumns}\n                  style={{ marginRight: '20px' }}\n                />\n                Columns\n              </h2>\n              {selectedColumns.length > 0 ? (\n                <button\n                  onClick={\n                    mergeColumns\n                  }>{`Merge ${selectedColumns.length} columns`}</button>\n              ) : (\n                  ''\n                )}\n            </div>\n            <div className=\"region-list column-list\">\n              {metaColumns.map(mc => (\n                <ColumnCard\n                  name={mc.name}\n                  description={mc.description}\n                  fromColumns={mc.columns.map(dereferenceColumn)}\n                  selected={selectedColumns.includes(mc.id)}\n                  onClick={() => toggleSelectedColumn(mc.id)}\n                  onUpdate={newName => changeMCName(mc, newName)}\n                  onUnmerge={() => seperateMetaDataColumn(mc.id)}\n                  link={`/project/${project.id}/column/${mc.id}`}\n                  key={mc.id}\n                />\n              ))}\n            </div>\n          </div>\n\n          <div className=\"datasets region\">\n            <div className=\"region-header\">\n              <h2>\n                <FontAwesomeIcon\n                  icon={faDatabase}\n                  style={{ marginRight: '20px' }}\n                />\n                Datasets\n              </h2>\n            </div>\n            <div className='dataset-table-view'>\n              <div className=\"dataset-tabs\">\n                {datasets.map((dataset, index) => (\n                  <p\n                    key={dataset.name}\n                    className={\n                      selectedDatasetName === dataset.name\n                        ? 'selected-dataset dataset-tab'\n                        : 'dataset-tab'\n                    }\n                    onClick={() => setSelectedDatasetName(dataset.name)}>\n                    <span className='dataset-number'>{index + 1}</span> <span className='dataset-name'>{dataset.name}</span>\n                  </p>\n                ))}\n                <p className=\"final-dataset dataset-tab\">Result</p>\n                <div className=\"spacer\" />\n                <Link\n                  to={`/project/${projectID}/add_datasets`}\n                  className=\"add-dataset dataset-tab\">\n                  <FontAwesomeIcon icon={faPlus} />\n                  <span className='dataset-name'>Add Dataset</span>\n                </Link>\n              </div>\n              <div className='table'>\n                {datasets.length > 0 && selectedDataset && (\n                  <TablePreview\n                    data={selectedDataset.sample}\n                    columns={selectedDataset.columns}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n        </React.Fragment>\n      ) : (\n          <h1>Project not found</h1>\n        )}\n    </div>\n  );\n}\n","import React from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer';\nimport UploadModal from './components/UploadModal';\nimport ProjectModal from './components/ProjectModal';\nimport LoadProjectModal from './components/LoadProjectModal';\nimport GHPagesRedirect from './components/GHPagesRedirect';\nimport ShowApplyMappingsModal from './components/ApplyMappingsModal';\nimport CodeExportModal from './components/CodeExportModal';\nimport DatasetPage from './pages/DatasetPage';\nimport ColumnPage from './pages/ColumnPage';\nimport WelcomePage from './pages/WelcomePage';\nimport ProjectPage from './pages/ProjectPage';\nimport 'typeface-lato';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.scss';\n\nfunction App() {\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <GHPagesRedirect />\n      <div className=\"App\">\n        <div className=\"main\">\n          <Route\n            path=\"/project/:projectID/dataset/:datasetID\"\n            exact={true}\n            component={DatasetPage}\n          />\n          <Route\n            path=\"/project/:projectID/column/:columnID\"\n            exact={true}\n            component={ColumnPage}\n          />\n          <Route\n            path=\"/project/:projectID\"\n            exact={true}\n            component={ProjectPage}\n          />\n          <Route path=\"/\" exact={true} component={WelcomePage} />\n        </div>\n        <Footer />\n\n        <Route path=\"/\" component={Header} />\n\n        <Route path=\"/new_project\" component={ProjectModal} />\n        <Route path=\"/load_project\" component={LoadProjectModal} />\n\n        <Route path=\"/project/:projectID/export\" component={CodeExportModal} />\n        <Route\n          path=\"/project/:projectID/add_datasets\"\n          component={UploadModal}\n        />\n\n        <Route\n          path=\"/dataset/:datasetID/apply\"\n          component={ShowApplyMappingsModal}\n        />\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {StateProvider} from './contexts/app_context'\n\nReactDOM.render(\n<StateProvider>\n  <App />\n</StateProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}